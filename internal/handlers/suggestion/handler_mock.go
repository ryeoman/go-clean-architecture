// Code generated by MockGen. DO NOT EDIT.
// Source: ./handler.go

// Package suggestion is a generated GoMock package.
package suggestion

import (
	popular_keyword "go-clean-architecture/internal/interactor/popular_keyword"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockpopularKeywordInteractor is a mock of popularKeywordInteractor interface.
type MockpopularKeywordInteractor struct {
	ctrl     *gomock.Controller
	recorder *MockpopularKeywordInteractorMockRecorder
}

// MockpopularKeywordInteractorMockRecorder is the mock recorder for MockpopularKeywordInteractor.
type MockpopularKeywordInteractorMockRecorder struct {
	mock *MockpopularKeywordInteractor
}

// NewMockpopularKeywordInteractor creates a new mock instance.
func NewMockpopularKeywordInteractor(ctrl *gomock.Controller) *MockpopularKeywordInteractor {
	mock := &MockpopularKeywordInteractor{ctrl: ctrl}
	mock.recorder = &MockpopularKeywordInteractorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockpopularKeywordInteractor) EXPECT() *MockpopularKeywordInteractorMockRecorder {
	return m.recorder
}

// GetUsecase mocks base method.
func (m *MockpopularKeywordInteractor) GetUsecase(p popular_keyword.Presenter) popular_keyword.UsecaseItf {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUsecase", p)
	ret0, _ := ret[0].(popular_keyword.UsecaseItf)
	return ret0
}

// GetUsecase indicates an expected call of GetUsecase.
func (mr *MockpopularKeywordInteractorMockRecorder) GetUsecase(p interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUsecase", reflect.TypeOf((*MockpopularKeywordInteractor)(nil).GetUsecase), p)
}
